---
- name: Get VM Folder location
  vmware_guest_find:
    hostname: "{{ vcenter_server }}"
    username: "{{ ansible_user }}"
    password: "{{ ansible_password }}"
    name: "{{ inventory_hostname | regex_replace('\\.domain\\.com') }}"
  register: vm_folder
  delegate_to: localhost

- name: Set Datacenter
  set_fact:
    location_dc: "{{ vm_folder.folders | first | regex_search('^/\\w{1,64}') }}"

- name: Snapshot VM
  vmware_guest_snapshot:
    hostname: "{{ vcenter_server }}"
    username: "{{ ansible_user }}"
    password: "{{ ansible_password }}"
    datacenter: "{{ location_dc }}"
    name: "{{ inventory_hostname | regex_replace('\\.domain\\.com') }}"
    folder: "{{ vm_folder.folders | first }}"
    state: present
    snapshot_name: Before_Updates
    quiesce: True
    memory_dump: False
  delegate_to: localhost

- name: Apply updates
  win_updates:
    reboot: yes
    category_names:
      - Application
      - Connectors
      - CriticalUpdates
      - DefinitionUpdates
      - DeveloperKits
      - FeaturePacks
      - Guidance
      - SecurityUpdates
      - ServicePacks
      - Tools
      - UpdateRollups
      - Updates
  register: update_result

- name: Update VM tools
  vars:
    command: "{{ windows_script_dir }}\\vmware\\update-vmtools.ps1 -VMName {{ vm_name }} -vCenterServer {{ vcenter_server }}"
  win_shell: |
    $username = "{{ ansible_user }}"
    $password = "{{ ansible_password }}"
    $password = ConvertTo-SecureString -String $password -AsPlainText -Force
    $cred = New-Object System.Management.Automation.PSCredential $username,$password
    {{ command }} -Credential $cred
  delegate_to: "{{ item }}"
  loop: "{{ groups['bridge'] }}"